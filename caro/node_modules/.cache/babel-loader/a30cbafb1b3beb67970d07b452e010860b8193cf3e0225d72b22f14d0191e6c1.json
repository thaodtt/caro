{"ast":null,"code":"import Square from\"./Square\";import{useState}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function Board(){const m=15,n=20;const numConsecutiveToWin=5;const[squares,setSquares]=useState(Array(m*n).fill(null));const[xIsNext,setXIsNext]=useState(true);const[latestPos,setLatestPos]=useState(null);function reset(){setXIsNext(true);setLatestPos(null);setSquares(Array(m*n).fill(null));}const winner=calculateWinner();function handleClick(i){if(squares[i]||winner){return;}const nextSquares=squares.slice();if(xIsNext){nextSquares[i]=\"X\";}else{nextSquares[i]=\"O\";}setSquares(nextSquares);setXIsNext(!xIsNext);setLatestPos(i);}function posToRowCol(pos){return[parseInt(pos/n),pos%n];}function rowColToPos(row,col){return row*n+col;}function calculateWinner(){const[row,col]=posToRowCol(latestPos);const latestSymbol=xIsNext?\"O\":\"X\";console.log(\"Current pos is \".concat(latestPos,\", row is \").concat(row,\" col is \").concat(col,\", latest symbol is \").concat(latestSymbol));// check vertical\nvar upper=row,lower=row;console.log(\"at first, upper=\".concat(upper,\", lower=\").concat(lower));while(squares[rowColToPos(upper,col)]===latestSymbol){upper--;if(upper<0){break;}}while(squares[rowColToPos(lower,col)]===latestSymbol){lower++;if(lower>=m){break;}}console.log(\"after the while loop, upper=\".concat(upper,\", lower=\").concat(lower));if(lower-upper-1>=numConsecutiveToWin){return latestSymbol;}// check horizontal\nvar left=col,right=col;while(squares[rowColToPos(row,left)]===latestSymbol){left--;if(left<0){break;}}while(squares[rowColToPos(row,right)]===latestSymbol){right++;if(right>=n){break;}}if(right-left-1>=numConsecutiveToWin){return latestSymbol;}// checking up right diagonal        \nleft=col;right=col;while(squares[rowColToPos(row-col+left,left)]===latestSymbol){left--;if(left<0|row-col+left>=m){break;}}while(squares[rowColToPos(row-col+right,right)]===latestSymbol){right++;if(right>=n|row-col+right<=0){break;}}if(right-left-1>=numConsecutiveToWin){return latestSymbol;}// checking up left diagonal        \nleft=col;right=col;while(squares[rowColToPos(row+col-left,left)]===latestSymbol){left--;if(left<0|row+col-left<=0){break;}}while(squares[rowColToPos(row+col-right,right)]===latestSymbol){right++;if(right>=n|row+col-right>=m){break;}}if(right-left-1>=numConsecutiveToWin){return latestSymbol;}return null;}let status;if(winner){status=\"Winner: \"+winner;}else{status=\"Next player: \"+(xIsNext?\"X\":\"O\");}const board=[];for(let row=0;row<m;row++){let board_row=[];for(let col=0;col<n;col++){board_row.push(/*#__PURE__*/_jsx(Square,{value:squares[row*n+col],onSquareClick:()=>handleClick(row*n+col)}));}board.push(/*#__PURE__*/_jsx(\"div\",{className:\"board-row\",children:board_row}));}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"left-text\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Caro chess\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Rule: each player alternates X and O, whoever gets to 5 in a row, or column or diagonal first wins.\"}),/*#__PURE__*/_jsx(\"button\",{className:\"play-button\",onClick:reset,children:\"PLAY\"}),/*#__PURE__*/_jsx(\"p\",{className:\"status\",children:status})]}),/*#__PURE__*/_jsx(\"div\",{className:\"board\",children:board})]});}","map":{"version":3,"names":["Square","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Board","m","n","numConsecutiveToWin","squares","setSquares","Array","fill","xIsNext","setXIsNext","latestPos","setLatestPos","reset","winner","calculateWinner","handleClick","i","nextSquares","slice","posToRowCol","pos","parseInt","rowColToPos","row","col","latestSymbol","console","log","concat","upper","lower","left","right","status","board","board_row","push","value","onSquareClick","className","children","onClick"],"sources":["C:/Users/mitadm/Documents/htmls/caro/caro/src/Board.js"],"sourcesContent":["import Square from \"./Square\";\r\nimport { useState } from 'react';\r\n\r\nexport default function Board() {\r\n    const m=15, n=20;\r\n    const numConsecutiveToWin=5;\r\n    const [squares, setSquares] = useState(Array(m*n).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n    const [latestPos, setLatestPos] = useState(null);\r\n\r\n    function reset(){\r\n        setXIsNext(true);\r\n        setLatestPos(null);\r\n        setSquares(Array(m*n).fill(null));\r\n    }\r\n\r\n    const winner = calculateWinner();\r\n\r\n    function handleClick(i) {\r\n      if (squares[i] || winner) {\r\n        return;\r\n      }\r\n      const nextSquares = squares.slice();\r\n      if (xIsNext) {\r\n        nextSquares[i] = \"X\";\r\n      } else {\r\n        nextSquares[i] = \"O\";\r\n      }\r\n      setSquares(nextSquares);\r\n      setXIsNext(!xIsNext);\r\n      setLatestPos(i);\r\n    }\r\n    function posToRowCol(pos){\r\n        return [parseInt(pos/n), pos %n];\r\n    }\r\n    function rowColToPos(row, col){\r\n        return row*n+col;\r\n    }\r\n    function calculateWinner(){\r\n        const [row, col] = posToRowCol(latestPos);\r\n        const latestSymbol = xIsNext? \"O\": \"X\";\r\n        console.log(`Current pos is ${latestPos}, row is ${row} col is ${col}, latest symbol is ${latestSymbol}`);\r\n\r\n        // check vertical\r\n        var upper=row, lower=row;\r\n        console.log(`at first, upper=${upper}, lower=${lower}`);\r\n        while ((squares[rowColToPos(upper, col)]===latestSymbol)) {\r\n            upper--;\r\n            if (upper<0){break;}\r\n        }\r\n        while ((squares[rowColToPos(lower, col)]===latestSymbol)) {\r\n            lower++;\r\n            if (lower>=m){break;}\r\n        }\r\n        console.log(`after the while loop, upper=${upper}, lower=${lower}`);\r\n        if (lower - upper - 1>=numConsecutiveToWin){return latestSymbol;}\r\n\r\n        // check horizontal\r\n        var left=col, right=col;\r\n        while ((squares[rowColToPos(row, left)]===latestSymbol)) {\r\n            left--;\r\n            if (left<0){break;}\r\n        }\r\n        while ((squares[rowColToPos(row, right)]===latestSymbol)) {\r\n            right++;\r\n            if (right>=n){break;}\r\n        }\r\n        if (right - left - 1>=numConsecutiveToWin){return latestSymbol;}\r\n\r\n        // checking up right diagonal        \r\n        left=col;\r\n        right=col;\r\n        while ((squares[rowColToPos(row-col+left, left)]===latestSymbol)) {\r\n            left--;\r\n            if ((left<0)|(row-col+left)>=m){break;}\r\n        }\r\n        while ((squares[rowColToPos(row-col+right, right)]===latestSymbol)) {\r\n            right++;\r\n            if ((right>=n)|(row-col+right<=0)){break;}\r\n        }\r\n        if (right - left - 1>=numConsecutiveToWin){return latestSymbol;}\r\n        \r\n        // checking up left diagonal        \r\n        left=col;\r\n        right=col;\r\n        while ((squares[rowColToPos(row+col-left, left)]===latestSymbol)) {\r\n            left--;\r\n            if ((left<0)|(row+col-left<=0)){break;}\r\n        }\r\n        while ((squares[rowColToPos(row+col-right, right)]===latestSymbol)) {\r\n            right++;\r\n            if ((right>=n)|(row+col-right>=m)){break;}\r\n        }\r\n        if (right - left - 1>=numConsecutiveToWin){return latestSymbol;}\r\n        return null;\r\n    }\r\n\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    const board = []\r\n    for (let row = 0; row < m; row ++) {\r\n        let board_row = [];\r\n        for (let col = 0; col < n; col ++) {\r\n            board_row.push(<Square value={squares[row*n + col]} onSquareClick={()=>handleClick(row*n + col)}/>)\r\n        }\r\n        board.push(<div className=\"board-row\">{board_row}</div>);\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"left-text\">\r\n            <h3>Caro chess</h3>\r\n            <p>Rule: each player alternates X and O, whoever gets to 5 in a row, or column or diagonal first wins.</p>\r\n            <button className=\"play-button\" onClick={reset}>PLAY</button>\r\n            <p className=\"status\">{status}</p>\r\n        </div>\r\n        <div className=\"board\">{board}</div>\r\n      </>\r\n    );\r\n  }\r\n    \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}