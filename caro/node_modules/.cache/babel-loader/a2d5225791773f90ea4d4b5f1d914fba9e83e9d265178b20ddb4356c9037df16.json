{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mitadm\\\\Documents\\\\htmls\\\\caro\\\\caro\\\\src\\\\Board.js\",\n  _s = $RefreshSig$();\nimport Square from \"./Square\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Board() {\n  _s();\n  const m = 2,\n    n = 3;\n  const [squares, setSquares] = useState(Array(m * n).fill(null));\n  const [xIsNext, setXIsNext] = useState(true);\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice();\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    setSquares(nextSquares);\n    setXIsNext(!xIsNext);\n  }\n\n  // const winner = calculateWinner(squares);\n  const winner = null; //TODO\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  const board = [];\n  var pos;\n  for (let row = 0; row < m; row++) {\n    let board_row = [];\n    for (let col = 0; col < n; col++) {\n      pos = row * n + col;\n      board_row.push( /*#__PURE__*/_jsxDEV(Square, {\n        value: squares[pos],\n        onSquareClick: () => handleClick(pos)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 28\n      }, this));\n    }\n    board.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: board_row\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: squares\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), board]\n  }, void 0, true);\n}\n_s(Board, \"6TZp30eLV8nLosmBWGY+nphWv/M=\");\n_c = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["Square","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Board","_s","m","n","squares","setSquares","Array","fill","xIsNext","setXIsNext","handleClick","i","calculateWinner","nextSquares","slice","winner","status","board","pos","row","board_row","col","push","value","onSquareClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","lines","length","a","b","c","$RefreshReg$"],"sources":["C:/Users/mitadm/Documents/htmls/caro/caro/src/Board.js"],"sourcesContent":["import Square from \"./Square\";\r\nimport { useState } from 'react';\r\n\r\nexport default function Board() {\r\n    const m=2, n=3;\r\n    const [squares, setSquares] = useState(Array(m*n).fill(null));\r\n    const [xIsNext, setXIsNext] = useState(true);\r\n\r\n    function handleClick(i) {\r\n      if (squares[i] || calculateWinner(squares)) {\r\n        return;\r\n      }\r\n      const nextSquares = squares.slice();\r\n      if (xIsNext) {\r\n        nextSquares[i] = \"X\";\r\n      } else {\r\n        nextSquares[i] = \"O\";\r\n      }\r\n      setSquares(nextSquares);\r\n      setXIsNext(!xIsNext);\r\n    }\r\n\r\n    // const winner = calculateWinner(squares);\r\n    const winner = null; //TODO\r\n    let status;\r\n    if (winner) {\r\n      status = \"Winner: \" + winner;\r\n    } else {\r\n      status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\r\n    }\r\n\r\n    const board = []\r\n    var pos;\r\n    for (let row = 0; row < m; row ++) {\r\n        let board_row = [];\r\n        for (let col = 0; col < n; col ++) {\r\n            pos = row*n + col;\r\n            board_row.push(<Square value={squares[pos]} onSquareClick={()=>handleClick(pos)}/>)\r\n        }\r\n        board.push(<div className=\"board-row\">{board_row}</div>);\r\n    }\r\n    return (\r\n      <>\r\n        <div className=\"status\">{status}</div>\r\n        <div>{squares}</div>\r\n        {board}\r\n      </>\r\n    );\r\n  }\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6]\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}